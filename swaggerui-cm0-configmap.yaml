apiVersion: v1
data:
  openapi.yaml: "openapi: 3.0.3\ninfo:\n  title: Universidad API\n  description: API para prueba sobre universidad.\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: pablobybravo@gmail.com\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nservers:\n  - url: http://localhost:8080/demo63/rest\ntags:\n  - name: universidad\n    description: Todo sobre Universidad\npaths:\n  /universidades:\n    post:\n      tags:\n        - universidades\n      summary: Crear una nueva Universidad\n      description: Crear un nuevo universidad en la base de datos.\n      operationId: crearUniverisdad\n      requestBody:\n        description: Datos del universidad a crear\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Universidad'\n              \n        responses:\n        '200':\n          description: Operaci贸n exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Universidad'\n                \n        '400':\n          description: Error al guardar la universidad\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    put:\n      tags:\n        - universidades\n      summary: Actualizar una universidad existente\n      description: Actualizar los datos de una universidad existente en la base de datos.\n      operationId: actualizarUniversidad\n      requestBody:\n        description: Datos del cliente a actualizar\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UniversidadPut'\n              \n        responses:\n        '200':\n          description: Operaci贸n exitosa\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Universidad'\n                \n        '406':\n          description: Error al actualizar el universidad\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n    delete:\n      tags:\n        - universidades\n      summary: Borrar una universidad por DNI\n      description: Borrar una universidad de la base de datos.\n      operationId: borrarUniversidad\n      parameters:\n        - name: codigo\n          in: query\n          description: ID de la universidad\n          required: true\n          schema:\n            type: integer\n            \n      responses:\n        '200':\n          description: Operaci贸n exitosa\n          content:\n            application/json:\n              schema:\n                type: string\n                \n        '500':\n          description: Error al borrar la universidad\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n\n\n  /universidades/list:\n    get:\n      tags:\n        - universidades\n      summary: Obtener todos las universidades\n      description: Obtener todos los universidades\n      operationId: obtenerTodosLasUniversidades\n      responses:\n        '200':\n          description: Operaci贸n exitosa\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Universidad'\n        '404':\n          description: Universidades no encontrados\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ErrorMessage'\n\ncomponents:\n  schemas:\n    Universidad:\n      type: object\n      properties:\n        codigo:\n          type: integer\n          example: 1\n          format: int64\n        nombre:\n          type: string\n          example: 'UPS'\n          \n    UniversidadPut:\n      type: object\n      properties:\n        codigo:\n          type: integer\n          example: 1\n          format: int64\n        nombre:\n          type: string\n          example: 'UPS'\n        \n    ErrorMessage:\n      type: object\n      properties:\n        code:\n          type: integer\n          format: int32\n        message:\n          type: string\n"
kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: swaggerui
  name: swaggerui-cm0
